# This is a basic workflow to help you get started with Actions

name: Create new bundle

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      BASE_URL: "https://api.segmentapis.com"
      TAXONOMY_CORE_ID: "tp_1wp3VoPyrRCNbl3lJT6PDUCi5rN"
      TAXONOMY_UPDATES_ID: "tp_1ybAXDkFHogu5SarT9gozVQYu6j"
      JSON_RULES_ID: "sfnc_hxdpUMFSYO"
      LOOKUP_RULES_ID: "sfnc_TNhNLzGwpl"
      CODE_BASE_ID: "id"
      CORE_INGESTION_FUNCTION_ID: "dkZptWMBoYqtawTMcY8RK4"
      
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Initialize env variables
        run: |
          echo "TAXONOMY_CORE=$(cat ./src/deploy/taxonomy_core)" >> $GITHUB_ENV
          echo "TAXONOMY_UPDATES=$(cat ./src/deploy/taxonomy_updates)" >> $GITHUB_ENV
          echo "JSON_RULES=$(cat ./src/deploy/json_rules)" >> $GITHUB_ENV
          echo "LOOKUP_RULES=$(cat ./src/deploy/lookup_rules)" >> $GITHUB_ENV
          
      - name: Print env variables
        run: |
          echo ${{env.TAXONOMY_CORE}}
          echo ${{env.TAXONOMY_UPDATES}}
          echo ${{env.JSON_RULES}}
          echo ${{env.LOOKUP_RULES}}
          
      - name: Update Static Rules if needed
        if: ${{ env.JSON_RULES == 1 }}
        run: |
          (curl --fail --location --request PATCH '${{env.BASE_URL}}/sources/${{env.CORE_INGESTION_FUNCTION_ID}}' --header 'Authorization: Bearer ${{secrets.ACCESS_TOKEN}}' --header 'Content-Type: application/json' -d @./src/assets/json_rules.json  || { exit 1;})
          echo "0" > ./src/deploy/json_rules
          echo "GIT_PUSH_REQUIRED=1" >> $GITHUB_ENV
          
      - name: Update Lookup Rules if needed
        if: ${{ env.LOOKUP_RULES == 1 }}
        run: |
          (curl --fail --location --request PATCH '${{env.BASE_URL}}/sources/${{env.CORE_INGESTION_FUNCTION_ID}}' --header 'Authorization: Bearer ${{secrets.ACCESS_TOKEN}}' --header 'Content-Type: application/json' -d @./src/assets/lookup_rules.json  || { exit 1;})
          echo "0" > ./src/deploy/lookup_rules
          echo "GIT_PUSH_REQUIRED=1" >> $GITHUB_ENV
          
      - name: Commit/Push files in the output folder
        if: ${{ env.GIT_PUSH_REQUIRED == 1 }}
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add ./src/
          git commit -m "Deployed assets"
          git push
